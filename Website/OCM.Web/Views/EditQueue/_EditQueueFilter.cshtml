@model OCM.API.Common.Model.EditQueueFilter

<div class="well well-sm">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-inline">

            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.ShowEditsOnly, new { @class = "control-label" })

                @Html.EditorFor(model => model.ShowEditsOnly, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShowEditsOnly)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShowProcessed, new { @class = "control-label" })

                @Html.EditorFor(model => model.ShowProcessed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShowProcessed)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateFrom, new { @class = "control-label" })

                @Html.EditorFor(model => model.DateFrom)
                @Html.ValidationMessageFor(model => model.DateFrom)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateTo, new { @class = "control-label" })

                @Html.EditorFor(model => model.DateTo)
                @Html.ValidationMessageFor(model => model.DateTo)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ID, new { @class = "control-label" })

                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID)
            </div>

             <div class="form-group">
                @Html.LabelFor(model => model.UserId, new { @class = "control-label" })

                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId)
            </div>

            @Html.HiddenFor(model => model.MinimumDifferences)
            @Html.HiddenFor(model => model.MaxResults)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Refresh" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

</div>